name: Check or Build data.table Artifact
on:
  push:
    branches:
      - main

jobs:
  check_or_build_data_table:
    runs-on: ubuntu-latest

    steps:
      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      - name: Define variables
        run: |
          echo "VERSION=1.14.0" >> $GITHUB_ENV  # Change version as needed
          echo "ARTIFACT_NAME=data_table_1.14.0.tar.gz" >> $GITHUB_ENV
          echo "ARTIFACT_PATH=artifacts/data_table_1.14.0.tar.gz" >> $GITHUB_ENV

      - name: Check if precompiled artifact exists
        id: check_artifact
        run: |
          if curl -L --silent --head --fail https://example.com/artifacts/${{ env.ARTIFACT_NAME }}; then
            echo "artifact_exists=true" >> $GITHUB_ENV
          else
            echo "artifact_exists=false" >> $GITHUB_ENV
          fi

      - name: Download precompiled artifact (if exists)
        if: env.artifact_exists == 'true'
        run: |
          curl -L -o ${{ env.ARTIFACT_NAME }} https://example.com/artifacts/${{ env.ARTIFACT_NAME }}
          Rscript -e "install.packages('${{ env.ARTIFACT_NAME }}', repos = NULL, type = 'source')"

      - name: Build data.table from source (if artifact not found)
        if: env.artifact_exists == 'false'
        run: |
          Rscript -e "install.packages('data.table', version = '${{ env.VERSION }}', repos = 'http://cran.rstudio.com')"
      - name: Create tarball
        run: |
         mkdir -p data.table
         cp -r /tmp/RtmpDkq1T4/downloaded_packages/data.table data.table/
         tar -czvf data.table.tar.gz data.table/

      - name: Upload artifact for future use
        if: env.artifact_exists == 'false'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}

      - name: Fallback mechanism (optional)
        if: failure()
        run: echo "Building from source due to failure in artifact retrieval."

