name: Check or Build data.table Artifact
on:
  push:
    branches:
      - main

jobs:
  check_or_build_data_table:
    runs-on: ubuntu-latest

    steps:
      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      - name: Define version and artifact names
        run: |
          echo "VERSION=1.14.0" >> $GITHUB_ENV  # Change version as needed
          echo "ARTIFACT_NAME=data_table_${{ env.VERSION }}.tar.gz" >> $GITHUB_ENV
          echo "ARTIFACT_PATH=artifacts/data_table_${{ env.VERSION }}.tar.gz" >> $GITHUB_ENV

      - name: Check if precompiled artifact exists
        id: check_artifact
        run: |
          ARTIFACT_URL="https://example.com/artifacts/${{ env.ARTIFACT_NAME }}"
          echo "Checking for artifact at $ARTIFACT_URL"
          if curl -L --silent --head --fail $ARTIFACT_URL; then
            echo "artifact_exists=true" >> $GITHUB_ENV
          else
            echo "artifact_exists=false" >> $GITHUB_ENV
          fi

      - name: Download precompiled artifact (if exists)
        if: env.artifact_exists == 'true'
        run: |
          echo "Downloading artifact..."
          curl -L -o ${{ env.ARTIFACT_PATH }} https://example.com/artifacts/${{ env.ARTIFACT_NAME }}
          Rscript -e "install.packages('${{ env.ARTIFACT_PATH }}', repos = NULL, type = 'source')"

      - name: Build data.table from source (if artifact not found)
        if: env.artifact_exists == 'false'
        run: |
          echo "Artifact not found. Building data.table from source..."
          Rscript -e "install.packages('data.table', version = '${{ env.VERSION }}', repos = 'http://cran.rstudio.com')"

      - name: Create tarball (minify and package)
        if: env.artifact_exists == 'false'
        run: |
          PKG_PATH=$(Rscript -e "cat(system.file(package='data.table'))")
          if [ -z "$PKG_PATH" ]; then
            echo "Error: data.table not found after installation!"
            exit 1
          fi
          mkdir -p data.table && cp -r "$PKG_PATH" data.table/
          tar -czvf ${{ env.ARTIFACT_PATH }} data.table/
        shell: bash

      - name: Upload artifact for future use
        if: env.artifact_exists == 'false'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}

      - name: Notify success
        if: env.artifact_exists == 'false'
        run: echo "Built and uploaded data.table version ${{ env.VERSION }} as an artifact."
